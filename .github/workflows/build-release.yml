name: build
on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'

jobs:
  build_natives:
    if: false
    permissions:
      contents: write
    name: Build natives libraries
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Make space
        run: sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
          java-package: jdk
          cache: 'maven'

      - name: Source versions from VERSION file
        run: cat VERSION >> $GITHUB_ENV

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
      - uses: ilammy/setup-nasm@v1
        if: runner.os == 'Windows'
      - name: Build OpenSSL
        if: runner.os == 'Windows'
        run: |
          Invoke-Webrequest -URI https://www.openssl.org/source/openssl-1.1.1w.tar.gz -OutFile openssl-1.1.1w.tar.gz
          tar zxf openssl-1.1.1w.tar.gz
          cd openssl-1.1.1w
          perl Configure VC-WIN64A --prefix=C:\openssl1.1.1
          nmake
          nmake install
          cp C:\openssl1.1.1\bin\libcrypto-1_1-x64.dll C:\openssl1.1.1\bin\libcrypto.dll
          cp C:\openssl1.1.1\bin\libssl-1_1-x64.dll C:\openssl1.1.1\bin\libssl.dll

      - name: Build binaries, test, and package
        if: ${{ runner.os == 'Windows' || runner.os == 'Linux' }}
        env:
          OCI_EXE: docker
        run: make native
      - name: Build binaries, test, and package for macOS
        if: runner.os == 'macOS'
        env:
          OCI_EXE: docker
        run: make mac64-signed mac-arm64-signed

      - name: Set platform classifier
        run: |
          if [[ ${{ runner.os }} == "Linux" ]]
          then
            classifier=linux
          elif [[ ${{ runner.os }} == "macOS" ]]
          then
            classifier=darwin
          elif [[ ${{ runner.os }} == "Windows" ]]
          then
            classifier=win
          fi
          echo "CLASSIFIER=$classifier" >> $GITHUB_ENV

      - name: Deploy version
        env:
          GLUON_NEXUS_USERNAME: ${{ secrets.GLUON_NEXUS_USERNAME }}
          GLUON_NEXUS_PASSWORD: ${{ secrets.GLUON_NEXUS_PASSWORD }}
        if: startsWith(github.ref, 'refs/tags/')
        run: make package deploy
